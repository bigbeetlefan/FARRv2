<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="DELETE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_kiwib_haumaru_remediation_task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_kiwib_haumaru_remediation_task">remediation_task_type=2^stateCHANGESTO3^EQ<item display_value="Check the checker" endquery="false" field="remediation_task_type" goto="false" newquery="false" operator="=" or="false" value="2"/>
            <item display_value="Closed" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="3"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>(KB) Chk the chkr survey compare_old</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	//Get Survey instance id
	var isDiff = false;

	//First Get all the assessment instance by case sys_id and task sys_id, and make sure the case one comes first.
	var ids = current.parent.sys_id.toString() + ',' + current.sys_id.toString();
	var astAnswers = [];
	var astm = new GlideRecord('asmt_assessment_instance');
	astm.addQuery('task_id', 'IN', ids);
	astm.orderBy('sys_created_on'); //make sure the case survey will get selected first
	astm.query();
	while(astm.next()){
		var oneAns = new x_kiwib_haumaru.KBHaumaruUtil().getAllSurveyAnswers(astm.sys_id);		
		astAnswers.push(oneAns);
	}

	var caseAnswers =  astAnswers[0];
	var taskAnswers =  astAnswers[1];

	//Getting Case Survey Answers
	var caseFirstLevel = caseAnswers.firstLevel;
	var caseOtherLevel = caseAnswers.otherLevel;
	var caseSecondLevel = [];

	var caseFirstlen = caseFirstLevel.length; 
	if(caseFirstlen > 0){
		for(var i=0; i<caseFirstlen; i++){	
			var secondRecord = caseOtherLevel.filter(function(element) {return element.parent === caseFirstLevel[i].metric; })[0];
			if(secondRecord){
				caseSecondLevel.push(secondRecord);
			}
		}
	}	
	var caseSecondLen = caseSecondLevel.length;

	//Getting Task Survey Answers
	var taskFirstLevel = taskAnswers.firstLevel;
	var taskOtherLevel = taskAnswers.otherLevel;
	var taskSecondLevel = [];

	var taskFirstlen = caseFirstLevel.length; 
	if(taskFirstlen > 0){
		for(var n=0; n<taskFirstlen; n++){	
			var secondTaskRecord = taskOtherLevel.filter(function(element) {return element.parent === taskFirstLevel[n].metric; })[0];
			if(secondTaskRecord){
				taskSecondLevel.push(secondTaskRecord);
			}
		}
	}
	var taskSecondLen = taskSecondLevel.length;


	//Looping through case first level questions
	var desc = '';
	for(var idx = 0; idx < caseFirstlen; idx++){


		var secondLevelCaseRecord = caseOtherLevel.filter(function(element) { return element.parent === caseFirstLevel[idx].metric; })[0];			
		var thirdLevelCaseRecord = {};
		var secondLevelTaskRecord = taskOtherLevel.filter(function(element) { return element.parent === taskFirstLevel[idx].metric; })[0];
		var thirdLevelTaskRecord = {};

		//If the first level question are very different answer
		if(caseFirstLevel[idx].string_value != taskFirstLevel[idx].string_value){
			isDiff = true;

			desc += caseFirstLevel[idx].category + '\n' + caseFirstLevel[idx].question + '\n';
			desc += 'Old Answer: ' + caseFirstLevel[idx].string_value ;

			if(secondLevelCaseRecord && secondLevelCaseRecord.string_value){
				desc +=  '\nReason: ' + secondLevelCaseRecord.string_value ;
				thirdLevelCaseRecord = caseOtherLevel.filter(function(element) { return element.parent === secondLevelCaseRecord.metric; })[0];
			} 

			if(thirdLevelCaseRecord && thirdLevelCaseRecord .string_value){
				desc += ' - ' + thirdLevelCaseRecord.string_value ;
			} 

			desc += '\n\n';
			desc += 'New Answer: ' + taskFirstLevel[idx].string_value ;

			if(secondLevelTaskRecord && secondLevelTaskRecord.string_value){
				desc += '\nReason: ' + secondLevelTaskRecord.string_value ;
				thirdLevelTaskRecord = taskOtherLevel.filter(function(element) { return element.parent === secondLevelTaskRecord.metric; })[0];
			} 

			if(thirdLevelTaskRecord && thirdLevelTaskRecord.string_value){
				desc += ' - ' + thirdLevelTaskRecord.string_value ;
			} 

			desc += '\n\n----------------------------------\n\n';
		}else{
			//Even if the first are the same answer, the second level could be different
			if(secondLevelCaseRecord && secondLevelTaskRecord && (secondLevelCaseRecord.string_value != secondLevelTaskRecord.string_value)){
				isDiff = true;

				desc += caseFirstLevel[idx].category + '\n' + caseFirstLevel[idx].question + '\n';
				desc += 'Old Answer: ' + caseFirstLevel[idx].string_value ;

				if(secondLevelCaseRecord && secondLevelCaseRecord.string_value){
					desc +=  '\nReason: ' + secondLevelCaseRecord.string_value ;
					thirdLevelCaseRecord = caseOtherLevel.filter(function(element) { return element.parent === secondLevelCaseRecord.metric; })[0];
				} 

				if(thirdLevelCaseRecord && thirdLevelCaseRecord .string_value){
					desc += ' - ' + thirdLevelCaseRecord.string_value ;
				} 

				desc += '\n\n';
				desc += 'New Answer: ' + taskFirstLevel[idx].string_value ;

				if(secondLevelTaskRecord && secondLevelTaskRecord.string_value){
					desc += '\nReason: ' + secondLevelTaskRecord.string_value ;
					thirdLevelTaskRecord = taskOtherLevel.filter(function(element) { return element.parent === secondLevelTaskRecord.metric; })[0];
				} 

				if(thirdLevelTaskRecord && thirdLevelTaskRecord.string_value){
					desc += ' - ' + thirdLevelTaskRecord.string_value ;
				} 
				desc += '\n\n----------------------------------\n\n';
			}

		}

	}//End of Looping

	var msg = 'All Assessment answers are identical. No moderation required.';
	if(isDiff){
		var remTask = new GlideRecord('x_kiwib_haumaru_remediation_task');
		remTask.initialize();
		remTask.parent = current.parent.toString();
		remTask.supervisor = current.supervisor;
		remTask.advisor = current.advisor;
		remTask.product = current.product;
		remTask.assigned_to = current.assigned_to;
		remTask.remediation_task_type = current.remediation_task_type;
		remTask.time_frame = current.time_frame;
		remTask.remediation_action = '7';
		remTask.description = desc;
		remTask.insert();
		msg = 'Some answers are different, a moderation task has been generated.';	
		
	}
	gs.addInfoMessage(msg);
	//action.setRedirectURL(remTask);


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>Bing.Liu@kiwibank.co.nz</sys_created_by>
        <sys_created_on>2021-05-05 23:37:35</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ba904cc81bccf090533e0dc8ec4bcb67</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>(KB) Chk the chkr survey compare_old</sys_name>
        <sys_overrides/>
        <sys_package display_value="Pae Haumaru" source="x_kiwib_haumaru">001ccea01b89205038c9ffbbdc4bcb2c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Pae Haumaru">001ccea01b89205038c9ffbbdc4bcb2c</sys_scope>
        <sys_update_name>sys_script_ba904cc81bccf090533e0dc8ec4bcb67</sys_update_name>
        <sys_updated_by>Bing.Liu@kiwibank.co.nz</sys_updated_by>
        <sys_updated_on>2021-07-07 05:04:38</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="DELETE" query="documentkey=ba904cc81bccf090533e0dc8ec4bcb67"/>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Pae Haumaru">001ccea01b89205038c9ffbbdc4bcb2c</application>
        <file_path/>
        <instance_id>5eff1e92db012f4c0e785d00cf961905</instance_id>
        <instance_name>kiwibankdev</instance_name>
        <name>sys_script_ba904cc81bccf090533e0dc8ec4bcb67</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;false&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;true&lt;/action_update&gt;&lt;active&gt;false&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;x_kiwib_haumaru_remediation_task&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition table="x_kiwib_haumaru_remediation_task"&gt;remediation_task_type=2^stateCHANGESTO3^EQ&lt;item display_value="Check the checker" endquery="false" field="remediation_task_type" goto="false" newquery="false" operator="=" or="false" value="2"/&gt;&lt;item display_value="Closed" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="3"/&gt;&lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;&lt;/filter_condition&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;(KB) Chk the chkr survey compare_old&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {

	//Get Survey instance id
	var isDiff = false;

	//First Get all the assessment instance by case sys_id and task sys_id, and make sure the case one comes first.
	var ids = current.parent.sys_id.toString() + ',' + current.sys_id.toString();
	var astAnswers = [];
	var astm = new GlideRecord('asmt_assessment_instance');
	astm.addQuery('task_id', 'IN', ids);
	astm.orderBy('sys_created_on'); //make sure the case survey will get selected first
	astm.query();
	while(astm.next()){
		var oneAns = new x_kiwib_haumaru.KBHaumaruUtil().getAllSurveyAnswers(astm.sys_id);		
		astAnswers.push(oneAns);
	}

	var caseAnswers =  astAnswers[0];
	var taskAnswers =  astAnswers[1];

	//Getting Case Survey Answers
	var caseFirstLevel = caseAnswers.firstLevel;
	var caseOtherLevel = caseAnswers.otherLevel;
	var caseSecondLevel = [];

	var caseFirstlen = caseFirstLevel.length; 
	if(caseFirstlen &gt; 0){
		for(var i=0; i&lt;caseFirstlen; i++){	
			var secondRecord = caseOtherLevel.filter(function(element) {return element.parent === caseFirstLevel[i].metric; })[0];
			if(secondRecord){
				caseSecondLevel.push(secondRecord);
			}
		}
	}	
	var caseSecondLen = caseSecondLevel.length;

	//Getting Task Survey Answers
	var taskFirstLevel = taskAnswers.firstLevel;
	var taskOtherLevel = taskAnswers.otherLevel;
	var taskSecondLevel = [];

	var taskFirstlen = caseFirstLevel.length; 
	if(taskFirstlen &gt; 0){
		for(var n=0; n&lt;taskFirstlen; n++){	
			var secondTaskRecord = taskOtherLevel.filter(function(element) {return element.parent === taskFirstLevel[n].metric; })[0];
			if(secondTaskRecord){
				taskSecondLevel.push(secondTaskRecord);
			}
		}
	}
	var taskSecondLen = taskSecondLevel.length;


	//Looping through case first level questions
	var desc = '';
	for(var idx = 0; idx &lt; caseFirstlen; idx++){


		var secondLevelCaseRecord = caseOtherLevel.filter(function(element) { return element.parent === caseFirstLevel[idx].metric; })[0];			
		var thirdLevelCaseRecord = {};
		var secondLevelTaskRecord = taskOtherLevel.filter(function(element) { return element.parent === taskFirstLevel[idx].metric; })[0];
		var thirdLevelTaskRecord = {};

		//If the first level question are very different answer
		if(caseFirstLevel[idx].string_value != taskFirstLevel[idx].string_value){
			isDiff = true;

			desc += caseFirstLevel[idx].category + '\n' + caseFirstLevel[idx].question + '\n';
			desc += 'Old Answer: ' + caseFirstLevel[idx].string_value ;

			if(secondLevelCaseRecord &amp;&amp; secondLevelCaseRecord.string_value){
				desc +=  '\nReason: ' + secondLevelCaseRecord.string_value ;
				thirdLevelCaseRecord = caseOtherLevel.filter(function(element) { return element.parent === secondLevelCaseRecord.metric; })[0];
			} 

			if(thirdLevelCaseRecord &amp;&amp; thirdLevelCaseRecord .string_value){
				desc += ' - ' + thirdLevelCaseRecord.string_value ;
			} 

			desc += '\n\n';
			desc += 'New Answer: ' + taskFirstLevel[idx].string_value ;

			if(secondLevelTaskRecord &amp;&amp; secondLevelTaskRecord.string_value){
				desc += '\nReason: ' + secondLevelTaskRecord.string_value ;
				thirdLevelTaskRecord = taskOtherLevel.filter(function(element) { return element.parent === secondLevelTaskRecord.metric; })[0];
			} 

			if(thirdLevelTaskRecord &amp;&amp; thirdLevelTaskRecord.string_value){
				desc += ' - ' + thirdLevelTaskRecord.string_value ;
			} 

			desc += '\n\n----------------------------------\n\n';
		}else{
			//Even if the first are the same answer, the second level could be different
			if(secondLevelCaseRecord &amp;&amp; secondLevelTaskRecord &amp;&amp; (secondLevelCaseRecord.string_value != secondLevelTaskRecord.string_value)){
				isDiff = true;

				desc += caseFirstLevel[idx].category + '\n' + caseFirstLevel[idx].question + '\n';
				desc += 'Old Answer: ' + caseFirstLevel[idx].string_value ;

				if(secondLevelCaseRecord &amp;&amp; secondLevelCaseRecord.string_value){
					desc +=  '\nReason: ' + secondLevelCaseRecord.string_value ;
					thirdLevelCaseRecord = caseOtherLevel.filter(function(element) { return element.parent === secondLevelCaseRecord.metric; })[0];
				} 

				if(thirdLevelCaseRecord &amp;&amp; thirdLevelCaseRecord .string_value){
					desc += ' - ' + thirdLevelCaseRecord.string_value ;
				} 

				desc += '\n\n';
				desc += 'New Answer: ' + taskFirstLevel[idx].string_value ;

				if(secondLevelTaskRecord &amp;&amp; secondLevelTaskRecord.string_value){
					desc += '\nReason: ' + secondLevelTaskRecord.string_value ;
					thirdLevelTaskRecord = taskOtherLevel.filter(function(element) { return element.parent === secondLevelTaskRecord.metric; })[0];
				} 

				if(thirdLevelTaskRecord &amp;&amp; thirdLevelTaskRecord.string_value){
					desc += ' - ' + thirdLevelTaskRecord.string_value ;
				} 
				desc += '\n\n----------------------------------\n\n';
			}

		}

	}//End of Looping

	var msg = 'All Assessment answers are identical. No moderation required.';
	if(isDiff){
		var remTask = new GlideRecord('x_kiwib_haumaru_remediation_task');
		remTask.initialize();
		remTask.parent = current.parent.toString();
		remTask.supervisor = current.supervisor;
		remTask.advisor = current.advisor;
		remTask.product = current.product;
		remTask.assigned_to = current.assigned_to;
		remTask.remediation_task_type = current.remediation_task_type;
		remTask.time_frame = current.time_frame;
		remTask.remediation_action = '7';
		remTask.description = desc;
		remTask.insert();
		msg = 'Some answers are different, a moderation task has been generated.';	
		
	}
	gs.addInfoMessage(msg);
	//action.setRedirectURL(remTask);


})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Bing.Liu@kiwibank.co.nz&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-05-05 23:37:35&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;ba904cc81bccf090533e0dc8ec4bcb67&lt;/sys_id&gt;&lt;sys_mod_count&gt;21&lt;/sys_mod_count&gt;&lt;sys_name&gt;(KB) Chk the chkr survey compare_old&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Pae Haumaru" source="x_kiwib_haumaru"&gt;001ccea01b89205038c9ffbbdc4bcb2c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Pae Haumaru"&gt;001ccea01b89205038c9ffbbdc4bcb2c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_ba904cc81bccf090533e0dc8ec4bcb67&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Bing.Liu@kiwibank.co.nz&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-07-07 05:04:38&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=ba904cc81bccf090533e0dc8ec4bcb67"/&gt;&lt;/record_update&gt;</payload>
        <payload_hash>304891844</payload_hash>
        <record_name>(KB) Chk the chkr survey compare_old</record_name>
        <reverted_from/>
        <source>ad9d29cd1bc1b4d0533e0dc8ec4bcbba</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>Bing.Liu@kiwibank.co.nz</sys_created_by>
        <sys_created_on>2021-07-07 05:04:38</sys_created_on>
        <sys_id>66be1c041b15f450533e0dc8ec4bcb3d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>17a7f5a8d910000001</sys_recorded_at>
        <sys_updated_by>Bing.Liu@kiwibank.co.nz</sys_updated_by>
        <sys_updated_on>2021-07-07 05:04:38</sys_updated_on>
        <type>Business Rule</type>
        <update_guid>1abe1c043b15f450abd152ae0a8d9f3c</update_guid>
        <update_guid_history>1abe1c043b15f450abd152ae0a8d9f3c:304891844,928e14c05515f450e99e98af762b2370:1658001675,39f8948c8091f4506f01e9237a426ef4:-666853189,98ca59380f387814aeea345264d8055e:-1769043347,f09de25c40687050e295e5bfa03ef6eb:173200242,6b2da6188168705066e00a4dc7ddfb66:177296789,e567ee908c28705017bd7f3c77423cfa:175709432,410762d099287050446167545e93dfe8:797120760,f826ac0cf5a83c1005a62ac7d1855c26:-1492118092</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>Bing.Liu@kiwibank.co.nz</sys_created_by>
        <sys_created_on>2021-07-07 05:16:57</sys_created_on>
        <sys_db_object display_value="" name="sys_script">sys_script</sys_db_object>
        <sys_id>0a9e5b3960524d0d8966fff5d0a64e29</sys_id>
        <sys_metadata>ba904cc81bccf090533e0dc8ec4bcb67</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>(KB) Chk the chkr survey compare_old</sys_name>
        <sys_package display_value="Pae Haumaru" source="x_kiwib_haumaru">001ccea01b89205038c9ffbbdc4bcb2c</sys_package>
        <sys_parent display_value="Remediation Task">8845e4141b83a4105cff43bdcc4bcb60</sys_parent>
        <sys_policy/>
        <sys_scope display_value="Pae Haumaru">001ccea01b89205038c9ffbbdc4bcb2c</sys_scope>
        <sys_scope_delete display_value="">02f82d1e9f0948b0802900399bacbfa4</sys_scope_delete>
        <sys_update_name>sys_script_ba904cc81bccf090533e0dc8ec4bcb67</sys_update_name>
        <sys_update_version display_value="sys_script_ba904cc81bccf090533e0dc8ec4bcb67">66be1c041b15f450533e0dc8ec4bcb3d</sys_update_version>
        <sys_updated_by>Bing.Liu@kiwibank.co.nz</sys_updated_by>
        <sys_updated_on>2021-07-07 05:16:57</sys_updated_on>
    </sys_metadata_delete>
</record_update>
